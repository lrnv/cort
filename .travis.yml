# OS: Linux + macOS ------------------------------------------------------------
# tic documentation: https://docs.ropensci.org/tic/dev/

matrix:
  include:
    - os: osx
      r: release
    - os: osx
      r: oldrel
    - os: linux
      r: devel
    - os: linux
      r: release
    - os: linux
      r: oldrel

# meta -------------------------------------------------------------------------
language: r
cache:
  - packages
  - $HOME/.ccache
  - $HOME/Library/Caches/Homebrew
latex: false

# environment variables --------------------------------------------------------

env:
  global:
    - MAKEFLAGS="-j 2"

# Stages -----------------------------------------------------------------------

before_install:
  - R -q -e 'if (!requireNamespace("remotes") || "remotes" %in% old.packages()) install.packages("remotes")'
  - R -q -e 'if (getRversion() < "3.2" && !requireNamespace("curl")) install.packages("curl")'
  # The following line is different from the template:
  # we need to install tic from our local source!
  - R -q -e 'remotes::install_local(getwd(), force = TRUE); print(tic::dsl_load()); tic::prepare_all_stages()'
  - R -q -e 'tic::before_install()'
install: R -q -e 'tic::install()'
before_script: R -q -e 'tic::before_script()'
script: R -q -e 'tic::script()'
after_success: R -q -e 'tic::after_success()'
after_failure: R -q -e 'tic::after_failure()'
before_deploy: R -q -e 'tic::before_deploy()'
deploy:
  provider: script
  script: R -q -e 'tic::deploy()'
  on:
    all_branches: true
after_deploy: R -q -e 'tic::after_deploy()'
after_script: R -q -e 'tic::after_script()'

# Custom user code -------------------------------------------------------------
